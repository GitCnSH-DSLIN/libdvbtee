{"name":"Libdvbtee","tagline":"dvbtee: a digital television streamer / parser / service information aggregator supporting various interfaces including telnet CLI & http control","body":"## dvbtee & libdvbtee\r\n\r\n### Introduction\r\n\r\nlibdvbtee is a stream parser and service information aggregator library for\r\nMPEG2 transport streams. The library includes a program service information\r\n(PSI) parser and support for various network streaming methods and is aware\r\nof the linux-dvb kernel API as well as HDHomeRun network streaming APIs.\r\n\r\nThe library contains enough functionality to power a full featured television\r\nmiddleware application, including the ability to acquire and stream data\r\nthrough UDP, TCP, HTTP, DMA and various other mechanisms.\r\n\r\n`libdvbtee_server` allows for these features to be controlled from an http\r\nsession or command line interface, and can be used to control multiple tuners.\r\n\r\nThe dvbtee executable application provides a variety of features, including:\r\nscanning, tuning, EPG browsing, receive incoming network streams,\r\nstream out network streams, manage multiple tuners, and more...\r\n\r\nThe server can be accessed either by telnet or http. The default port number\r\nis `64080`, but this is configurable. The `server_example` uses port number `62080`.\r\n\r\nWhen accessing the server via http, precede commands by / and arguments by =.\r\nWhen accessing the server via telnet, enter in the form 'command=argument'\r\nand press enter.\r\n\r\n**Command line arguments:**\r\n```\r\n-a      adapter id\r\n-A      (1 for ATSC, 2 for ClearQAM)\r\n-b      display bitrates & statistics\r\n-c      channel to tune /\r\n        comma (,) separated list of channels to scan /\r\n        scan minimum channel\r\n-C      channel to tune /\r\n        comma (,) separated list of channels to scan /\r\n        scan maximum channel\r\n-f      frontend id\r\n-F      filename to use as input\r\n-t      timeout\r\n-T      number of tuners (dvb adapters) allowed to use, 0 for all\r\n-s      scan, optional arg when using multiple tuners:\r\n        1 for speed, 2 for redundancy,\r\n        3 for speed AND redundancy,\r\n        4 for optimized speed / partial redundancy\r\n-S      server mode, optional arg 1 for command server,\r\n        2 for http stream server, 3 for both\r\n-i      pull local/remote tcp/udp port for data\r\n-I      request a service and its associated PES streams by its service id\r\n-E      enable EPG scan, optional arg to limit the number of EITs to parse\r\n-o      output filtered data, optional arg is a filename / URI, ie udp://127.0.0.1:1234\r\n-O      output options: (or-able) 1 = PAT/PMT, 2 = PES, 4 = PSIP\r\n-H      use a HdHomeRun device, optional arg to specify the device string\r\n-d      debug level\r\n-h      display additional help\r\n```\r\n### Example Usage\r\n\r\nTo tune to service id 1 of physical channel 33 and stream it to a udp port:\r\n```\r\n  ./dvbtee -c33 -I1 -oudp://192.168.1.100:1234\r\n```\r\n\r\nTo tune the second frontend of adapter 1 and stream the full TS of physical channel 44 to a tcp listener:\r\n```\r\n  ./dvbtee -c44 -otcp://192.168.1.200:5555\r\n```\r\n\r\nTo listen to a TCP port and stream to a UDP port:\r\n```\r\n  ./dvbtee -itcp://5555 -oudp://192.168.1.100:1234\r\n```\r\n\r\nTo parse a captured file and filter out the PSIP data, saving the PAT/PMT and PES streams to a file:\r\n```\r\n  ./dvbtee -Finput.ts -O3 -ofile://output.ts\r\n```\r\n\r\nTo parse a UDP stream for ten seconds:\r\n```\r\n  ./dvbtee -iudp://127.0.0.1:1234 -t10\r\n```\r\n\r\nTo scan for ClearQAM services using 5 tuners optimized for speed and partial redundancy:\r\n```\r\n  ./dvbtee -A2 -T5 -s4\r\n```\r\n\r\nTo scan for ATSC services using 2 HdHomeRun tuners optimized for speed and redundancy:\r\n```\r\n  ./dvbtee -A1 -H -T2 -s3\r\n```\r\n\r\nTo start a server using adapter 0:\r\n```\r\n  ./dvbtee -a0 -S\r\n```\r\n\r\nTo start a server using tuner1 of a specific HdHomeRun device (ex: ABCDABCD):\r\n```\r\n  ./dvbtee -H ABCDABCD-1 -S\r\n```\r\n\r\n### Server commands\r\n\r\n```\r\ntuner           specify tuner id\r\nfeeder          specify feeder id\r\nscan            scan for services, optional arg comma (,) separated list of channels to scan\r\nscanepg         same as 'scan' with EPG data collection enabled during scan\r\nstartscan       same as 'scan' but asynchronous\r\nstartscanepg    combo of 'scanepg' and 'startscan'\r\ntune            tune to a channel or service, ie:\r\n                tune=33 (full mux) / tune=44~3 (svc id 3)\r\nchannels        list channels\r\nchannel         tune physical channel (unsafe - use tune instead)\r\nservice         select service (unsafe - use tune instead)\r\nstream          add output file / tcp / udp / http stream, ie:\r\n                stream=udp:192.168.1.100:1234\r\n                stream=tcp:192.168.1.200:5555\r\n                stream=file:output.ts\r\n                stream (over http with no arg will begin streaming to current socket)\r\nepg             dump collected EPG data\r\nxmltv           dump collected EPG data in XMLTV format\r\nstop            stop the tuner\r\nstopoutput      stop the tuner and output\r\ncheck           display debug info if debug is enabled\r\ndebug           enable debug\r\nparser          enable / disable the parser for data shovel\r\nlisten          listen for TS on a TCP or UDP port\r\nsave            save scanned channels\r\nquit            stop the server and exit\r\n```\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}