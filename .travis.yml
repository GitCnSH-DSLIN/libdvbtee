sudo: false
language: cpp
matrix:
  include:
    - os: osx
      compiler: gcc

    - os: osx
      compiler: gcc
      env: USE_OLDDECODER=true

    - os: osx
      compiler: clang

    - os: osx
      compiler: clang
      env: USE_OLDDECODER=true

    - os: linux
      compiler: gcc
      addons:
        apt:
          packages: ['libdvbpsi-dev']

    - os: linux
      compiler: gcc
      addons:
        apt:
          packages: ['libdvbpsi-dev']
      env: USE_OLDDECODER=true

    - os: linux
      compiler: gcc
      addons:
        apt:
          sources: ['ubuntu-toolchain-r-test']
          packages: ['libdvbpsi-dev', 'g++-4.8']
      env: COMPILER=g++-4.8

    - os: linux
      compiler: gcc
      addons:
        apt:
          sources: ['ubuntu-toolchain-r-test']
          packages: ['libdvbpsi-dev', 'g++-4.8']
      env: COMPILER=g++-4.8 USE_OLDDECODER=true

    - os: linux
      compiler: gcc
      addons:
        apt:
          sources: ['ubuntu-toolchain-r-test']
          packages: ['libdvbpsi-dev', 'g++-4.9']
      env: COMPILER=g++-4.9

    - os: linux
      compiler: gcc
      addons:
        apt:
          sources: ['ubuntu-toolchain-r-test']
          packages: ['libdvbpsi-dev', 'g++-4.9']
      env: COMPILER=g++-4.9 USE_OLDDECODER=true

    - os: linux
      compiler: gcc
      addons:
        apt:
          sources: ['ubuntu-toolchain-r-test']
          packages: ['libdvbpsi-dev', 'g++-5']
      env: COMPILER=g++-5

    - os: linux
      compiler: gcc
      addons:
        apt:
          sources: ['ubuntu-toolchain-r-test']
          packages: ['libdvbpsi-dev', 'g++-5']
      env: COMPILER=g++-5 USE_OLDDECODER=true

    - os: linux
      compiler: clang
      addons:
        apt:
          packages: ['libdvbpsi-dev']

    - os: linux
      compiler: clang
      addons:
        apt:
          packages: ['libdvbpsi-dev']
      env: USE_OLDDECODER=true

    - os: linux
      compiler: clang
      addons:
        apt:
          sources: ['ubuntu-toolchain-r-test', 'llvm-toolchain-precise-3.5']
          packages: ['libdvbpsi-dev', 'clang-3.5']
      env: COMPILER=clang++-3.5

    - os: linux
      compiler: clang
      addons:
        apt:
          sources: ['ubuntu-toolchain-r-test', 'llvm-toolchain-precise-3.5']
          packages: ['libdvbpsi-dev', 'clang-3.5']
      env: COMPILER=clang++-3.5 USE_OLDDECODER=true

    - os: linux
      compiler: clang
      addons:
        apt:
          sources: ['ubuntu-toolchain-r-test', 'llvm-toolchain-precise-3.6']
          packages: ['libdvbpsi-dev', 'clang-3.6']
      env: COMPILER=clang++-3.6

    - os: linux
      compiler: clang
      addons:
        apt:
          sources: ['ubuntu-toolchain-r-test', 'llvm-toolchain-precise-3.6']
          packages: ['libdvbpsi-dev', 'clang-3.6']
      env: COMPILER=clang++-3.6 USE_OLDDECODER=true

# Activate when 3.7 is released and the repository is available
#    - os: linux
#      compiler: clang
#      addons:
#        apt:
#          sources: ['ubuntu-toolchain-r-test', 'llvm-toolchain-precise-3.7']
#          packages: ['libdvbpsi-dev', 'clang-3.7']
#      env: COMPILER=clang++-3.7

# Activate when 3.7 is released and the repository is available
#    - os: linux
#      compiler: clang
#      addons:
#        apt:
#          sources: ['ubuntu-toolchain-r-test', 'llvm-toolchain-precise-3.7']
#          packages: ['libdvbpsi-dev', 'clang-3.7']
#      env: COMPILER=clang++-3.7 USE_OLDDECODER=true

script:
  - mkdir -p m4
  - autoreconf --install
  - if [ "$USE_OLDDECODER" == "true" ]; then
      ./configure --enable-olddecoder;
    else
      ./configure;
    fi
  - if [ x"$COMPILER" == "x" ]; then
      make -j;
    else
      make CXX=$COMPILER -j;
    fi

before_install:
  - if [ "$TRAVIS_OS_NAME" != "linux" ]; then
        brew update;
        brew install libdvbpsi libhdhomerun;
    fi
