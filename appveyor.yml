environment:
  global:
    CYG_ROOT: C:\cygwin
    CYG_MIRROR: http://cygwin.mirror.constant.com
    CYG_CACHE: C:\cygwin\var\cache\setup
    CYG_BASH: C:\cygwin\bin\bash
#
# Cache Cygwin files to speed up build
#
cache:
  - '%CYG_CACHE%'
#
# Do a shallow clone of the repo to speed up build
#
clone_depth: 1

#
# Attempt to ensure we don't try to convert line endings to Win32 CRLF as this will cause build to fail
#
init:
  - git config --global core.autocrlf input

#
# Install needed build dependencies
#
install:
  - ps: 'Start-FileDownload "http://cygwin.com/setup-x86.exe" -FileName "setup-x86.exe"'
  - 'setup-x86.exe --quiet-mode --no-shortcuts --only-site --root "%CYG_ROOT%" --site "%CYG_MIRROR%" --local-package-dir "%CYG_CACHE%" --packages autoconf,automake,bison,gcc-core,gcc-g++,mingw-runtime,mingw-binutils,mingw-gcc-core,mingw-gcc-g++,mingw-pthreads,mingw-w32api,libtool,make,python,gettext-devel,gettext,intltool,libiconv,pkg-config,git,curl,libxslt > NUL 2>&1'
  - '%CYG_BASH% -lc "cygcheck -dc cygwin"'
  - set PATH=C:\msys64\usr\bin;%PATH%
  - bash --login -c "pacman -Q"
  - bash --login -c "pacman -S --noconfirm python mingw-gnutls mingw-libiconv"
#  - bash --login -c "curl https://bootstrap.pypa.io/get-pip.py | python"
#  - bash --login -c "pip install cram"

# Cygwin build script
#
# NOTES:
#
# The stdin/stdout file descriptor appears not to be valid for the Appveyor
# build which causes failures as certain functions attempt to redirect 
# default file handles. Ensure a dummy file descriptor is opened with 'exec'.
#
build_script:
#    - '%CYG_BASH% -lc "cd $APPVEYOR_BUILD_FOLDER; exec 0</dev/null; ./autogen.sh --prefix=/usr/local --host=i686-pc-mingw32"'
    - 'echo Building...'
    - '%CYG_BASH% -lc "cd $APPVEYOR_BUILD_FOLDER; exec 0</dev/null; ./build-auto.sh --host=i686-pc-mingw32"'
    - '%CYG_BASH% -lc "cd $APPVEYOR_BUILD_FOLDER; exec 0</dev/null; make -j2"'
